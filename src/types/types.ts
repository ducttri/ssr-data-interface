//////////////////////////////////////////////// DEPRECATED 
// These are hard coded stuffs that is not recommended to use.
// Please try to follow the new format as below; they are more
// efficient for future projects. 

export interface HealthJSON {
  _id: string;
  processed_data: ProcessedHealthJSON;
  raw_data: RawHealthJSON[];
}

interface ProcessedHealthJSON {
  start_time: number;
  c1: {
    arm_temp: ProcessedHealthJSONType;
    sipm_temp: ProcessedHealthJSONType;
    sipm_operating_voltage: ProcessedHealthJSONType;
  };
  m1: {
    arm_temp: ProcessedHealthJSONType;
    sipm_temp: ProcessedHealthJSONType;
    sipm_operating_voltage: ProcessedHealthJSONType;
  };
  m5: {
    arm_temp: ProcessedHealthJSONType;
    sipm_temp: ProcessedHealthJSONType;
    sipm_operating_voltage: ProcessedHealthJSONType;
  };
  x1: {
    arm_temp: ProcessedHealthJSONType;
    sipm_temp: ProcessedHealthJSONType;
    sipm_operating_voltage: ProcessedHealthJSONType;
  };
  x123: {
    board_temp: ProcessedHealthJSONType;
    det_high_voltage: ProcessedHealthJSONType;
    det_temp: ProcessedHealthJSONType;
  };
}

interface ProcessedHealthJSONType {
  avg: number;
  min: number;
  max: number;
}

interface RawHealthJSON {
  type: string;
  field: string;
  unit: string;
  value: number[];
  data_type: string;
}

export type RawHealthType = "timestamp" | "c1" | "m1" | "m5" | "x1" | "x123";

export interface RawHealthDataType {
  unit: string;
  value: number[];
}

export interface RowHealthData {
  id: number;
  uid: string;
  beginUTC: number;
  c1_arm_temp_avg: number;
  c1_arm_temp_min: number;
  c1_arm_temp_max: number;
  c1_sipm_temp_avg: number;
  c1_sipm_temp_min: number;
  c1_sipm_temp_max: number;
  c1_sipm_operating_voltage_avg: number;
  c1_sipm_operating_voltage_min: number;
  c1_sipm_operating_voltage_max: number;

  m1_arm_temp_avg: number;
  m1_arm_temp_min: number;
  m1_arm_temp_max: number;
  m1_sipm_temp_avg: number;
  m1_sipm_temp_min: number;
  m1_sipm_temp_max: number;
  m1_sipm_operating_voltage_avg: number;
  m1_sipm_operating_voltage_min: number;
  m1_sipm_operating_voltage_max: number;

  m5_arm_temp_avg: number;
  m5_arm_temp_min: number;
  m5_arm_temp_max: number;
  m5_sipm_temp_avg: number;
  m5_sipm_temp_min: number;
  m5_sipm_temp_max: number;
  m5_sipm_operating_voltage_avg: number;
  m5_sipm_operating_voltage_min: number;
  m5_sipm_operating_voltage_max: number;

  x1_arm_temp_avg: number;
  x1_arm_temp_min: number;
  x1_arm_temp_max: number;
  x1_sipm_temp_avg: number;
  x1_sipm_temp_min: number;
  x1_sipm_temp_max: number;
  x1_sipm_operating_voltage_avg: number;
  x1_sipm_operating_voltage_min: number;
  x1_sipm_operating_voltage_max: number;

  x123_board_temp_avg: number;
  x123_board_temp_min: number;
  x123_board_temp_max: number;
  x123_det_high_voltage_avg: number;
  x123_det_high_voltage_min: number;
  x123_det_high_voltage_max: number;
  x123_det_temp_avg: number;
  x123_det_temp_min: number;
  x123_det_temp_max: number;
}

export type RowHealthDataType =
  | "id"
  | "uid"
  | "beginUTC"
  | "c1_arm_temp_avg"
  | "c1_arm_temp_min"
  | "c1_arm_temp_max"
  | "c1_sipm_temp_avg"
  | "c1_sipm_temp_min"
  | "c1_sipm_temp_max"
  | "c1_sipm_operating_voltage_avg"
  | "c1_sipm_operating_voltage_min"
  | "c1_sipm_operating_voltage_max"
  | "m1_arm_temp_avg"
  | "m1_arm_temp_min"
  | "m1_arm_temp_max"
  | "m1_sipm_temp_avg"
  | "m1_sipm_temp_min"
  | "m1_sipm_temp_max"
  | "m1_sipm_operating_voltage_avg"
  | "m1_sipm_operating_voltage_min"
  | "m1_sipm_operating_voltage_max"
  | "m5_arm_temp_avg"
  | "m5_arm_temp_min"
  | "m5_arm_temp_max"
  | "m5_sipm_temp_avg"
  | "m5_sipm_temp_min"
  | "m5_sipm_temp_max"
  | "m5_sipm_operating_voltage_avg"
  | "m5_sipm_operating_voltage_min"
  | "m5_sipm_operating_voltage_max"
  | "x1_arm_temp_avg"
  | "x1_arm_temp_min"
  | "x1_arm_temp_max"
  | "x1_sipm_temp_avg"
  | "x1_sipm_temp_min"
  | "x1_sipm_temp_max"
  | "x1_sipm_operating_voltage_avg"
  | "x1_sipm_operating_voltage_min"
  | "x1_sipm_operating_voltage_max"
  | "x123_board_temp_avg"
  | "x123_board_temp_min"
  | "x123_board_temp_max"
  | "x123_det_high_voltage_avg"
  | "x123_det_high_voltage_min"
  | "x123_det_high_voltage_max"
  | "x123_det_temp_avg"
  | "x123_det_temp_min"
  | "x123_det_temp_max";

export interface FilterHealthData {
  key: RowHealthDataType;
  detector: string;
  field: number;
  type: string;
  operator: string;
  value: number;
}

//////////////////////////////////////////////// NEW TYPES

export interface HAFXScienceDecodedJSON {
  // generated by python decoder
  ch: HAFXScienceDecodedJSONType;
  buffer_number: HAFXScienceDecodedJSONType;
  num_evts: HAFXScienceDecodedJSONType;
  num_triggers: HAFXScienceDecodedJSONType;
  dead_time: HAFXScienceDecodedJSONType;
  anode_current: HAFXScienceDecodedJSONType;
  histogram: HAFXScienceDecodedJSONType;
  missed_pps: HAFXScienceDecodedJSONType;
  timestamp: HAFXScienceDecodedJSONType;
  datatype: HAFXScienceDecodedJSONType;
}

interface HAFXScienceDecodedJSONType {
  // generated by python decoder
  unit: string;
  value: any[];
}

export interface DataJSON {
  _id: string; // uid generated by MongoDB
  processed_data: ProcessedDataJSON[]; // used for columns or quick find
  raw_data: RawDataJSON[]; // used for graphing
}

export interface ProcessedDataJSON {
  type: string; // detector or general information such as health
  group: string; // under which group name such as SIPM Operating Voltage
  field: string; // field name such as avg, min, or max
  unit: string; // unit such as Voltage
  value: number; // value
  data_type: string; // Is this a 1D, 2D, 3D ...
}

export interface RawDataJSON {
  type: string; // detector or general information such as health
  field: string; // field name such SIPM Operating Voltage
  unit: string; // unit such as Voltage
  value: (number | string | null | number[])[]; // Array of value
  data_type: string; // Is this a 1D, 2D, 3D ...
}
